/* tslint:disable */
/* eslint-disable */
/**
 * Map Matching
 * With the Map Matching service you can assign GPS positions to road segments on a digital map.
 *
 * The version of the OpenAPI document: 1.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Describes the location of a segment. Not all descriptors are available for all segments.
 * @export
 * @interface SegmentLocationDescriptors
 */
export interface SegmentLocationDescriptors {
    /**
     * The country in which the segment is located.
     * @type {string}
     * @memberof SegmentLocationDescriptors
     */
    countryName?: string;
    /**
     * The city to which the segment belongs.
     * @type {string}
     * @memberof SegmentLocationDescriptors
     */
    city?: string;
    /**
     * The postal code of the city to which the segment belongs to.
     * @type {string}
     * @memberof SegmentLocationDescriptors
     */
    postalCode?: string;
    /**
     * The name or number of the road to which the segment belongs. The string may consist of several number entries divided by "/".
     * @type {string}
     * @memberof SegmentLocationDescriptors
     */
    street?: string;
}

/**
 * Check if a given object implements the SegmentLocationDescriptors interface.
 */
export function instanceOfSegmentLocationDescriptors(value: object): value is SegmentLocationDescriptors {
    return true;
}

export function SegmentLocationDescriptorsFromJSON(json: any): SegmentLocationDescriptors {
    return SegmentLocationDescriptorsFromJSONTyped(json, false);
}

export function SegmentLocationDescriptorsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SegmentLocationDescriptors {
    if (json == null) {
        return json;
    }
    return {
        
        'countryName': json['countryName'] == null ? undefined : json['countryName'],
        'city': json['city'] == null ? undefined : json['city'],
        'postalCode': json['postalCode'] == null ? undefined : json['postalCode'],
        'street': json['street'] == null ? undefined : json['street'],
    };
}

export function SegmentLocationDescriptorsToJSON(value?: SegmentLocationDescriptors | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'countryName': value['countryName'],
        'city': value['city'],
        'postalCode': value['postalCode'],
        'street': value['street'],
    };
}

