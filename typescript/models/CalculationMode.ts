/* tslint:disable */
/* eslint-disable */
/**
 * Map Matching
 * With the Map Matching service you can assign GPS positions to road segments on a digital map.
 *
 * The version of the OpenAPI document: 1.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Enumeration to define the calculation behavior of the matching, i.e. if the focus of calculation is on performance, quality or both.  
 *  * `PERFORMANCE` - The matching focuses on performance. This means to take into account a higher number of failed matches and in the case of track matching that the matched track may be split into several paths.  
 *  * `STANDARD` - The matching chooses a standard trade-off between quality and performance.  
 *  * `QUALITY` - The matching focuses on high solution quality. This means that as many as possible of the input positions are matched and taken into account. Though the processing time of the request can be high.
 * @export
 */
export const CalculationMode = {
    PERFORMANCE: 'PERFORMANCE',
    STANDARD: 'STANDARD',
    QUALITY: 'QUALITY'
} as const;
export type CalculationMode = typeof CalculationMode[keyof typeof CalculationMode];


export function instanceOfCalculationMode(value: any): boolean {
    for (const key in CalculationMode) {
        if (Object.prototype.hasOwnProperty.call(CalculationMode, key)) {
            if (CalculationMode[key as keyof typeof CalculationMode] === value) {
                return true;
            }
        }
    }
    return false;
}

export function CalculationModeFromJSON(json: any): CalculationMode {
    return CalculationModeFromJSONTyped(json, false);
}

export function CalculationModeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CalculationMode {
    return json as CalculationMode;
}

export function CalculationModeToJSON(value?: CalculationMode | null): any {
    return value as any;
}

