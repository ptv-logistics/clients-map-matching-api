/* tslint:disable */
/* eslint-disable */
/**
 * Map Matching
 * With the Map Matching service you can assign GPS positions to road segments on a digital map.
 *
 * The version of the OpenAPI document: 1.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Warning } from './Warning';
import {
    WarningFromJSON,
    WarningFromJSONTyped,
    WarningToJSON,
} from './Warning';
import type { MatchingStatus } from './MatchingStatus';
import {
    MatchingStatusFromJSON,
    MatchingStatusFromJSONTyped,
    MatchingStatusToJSON,
} from './MatchingStatus';
import type { MatchedTrack } from './MatchedTrack';
import {
    MatchedTrackFromJSON,
    MatchedTrackFromJSONTyped,
    MatchedTrackToJSON,
} from './MatchedTrack';
import type { ErrorResponse } from './ErrorResponse';
import {
    ErrorResponseFromJSON,
    ErrorResponseFromJSONTyped,
    ErrorResponseToJSON,
} from './ErrorResponse';

/**
 * Contains the results of a matching calculation. If the 'status' is 'RUNNING', the matching calculation is still running and no further properties are set. If the 'status' is 'SUCCEEDED', the matching result is present as property 'matchedTrack'. If the 'status' is 'FAILED', the failure result is present as property 'error'.
 * @export
 * @interface MatchingResponse
 */
export interface MatchingResponse {
    /**
     * 
     * @type {MatchingStatus}
     * @memberof MatchingResponse
     */
    status?: MatchingStatus;
    /**
     * 
     * @type {MatchedTrack}
     * @memberof MatchingResponse
     */
    matchedTrack?: MatchedTrack;
    /**
     * 
     * @type {ErrorResponse}
     * @memberof MatchingResponse
     */
    error?: ErrorResponse;
    /**
     * A list of warnings concerning the validity of the result.
     * @type {Array<Warning>}
     * @memberof MatchingResponse
     */
    warnings?: Array<Warning>;
}



/**
 * Check if a given object implements the MatchingResponse interface.
 */
export function instanceOfMatchingResponse(value: object): value is MatchingResponse {
    return true;
}

export function MatchingResponseFromJSON(json: any): MatchingResponse {
    return MatchingResponseFromJSONTyped(json, false);
}

export function MatchingResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MatchingResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'] == null ? undefined : MatchingStatusFromJSON(json['status']),
        'matchedTrack': json['matchedTrack'] == null ? undefined : MatchedTrackFromJSON(json['matchedTrack']),
        'error': json['error'] == null ? undefined : ErrorResponseFromJSON(json['error']),
        'warnings': json['warnings'] == null ? undefined : ((json['warnings'] as Array<any>).map(WarningFromJSON)),
    };
}

export function MatchingResponseToJSON(value?: MatchingResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'status': MatchingStatusToJSON(value['status']),
        'matchedTrack': MatchedTrackToJSON(value['matchedTrack']),
        'error': ErrorResponseToJSON(value['error']),
        'warnings': value['warnings'] == null ? undefined : ((value['warnings'] as Array<any>).map(WarningToJSON)),
    };
}

